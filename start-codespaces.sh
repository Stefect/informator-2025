#!/bin/bash
# Informator Codespaces Startup Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–∞–ø—É—Å–∫ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤ —É GitHub Codespaces

echo "üöÄ –ó–∞–ø—É—Å–∫ Informator –≤ GitHub Codespaces..."

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
if [ ! -f .env ]; then
    echo "‚öôÔ∏è  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
    cat > .env << EOF
NODE_ENV=development
CODESPACES=true
PORT=8080
API_PORT=3000
WS_PORT=8888
CORS_ORIGIN=*
HOST=0.0.0.0
EOF
fi

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —á–µ–∫—É–≤–∞–Ω–Ω—è –ø–æ—Ä—Ç—É
check_port() {
    local port=$1
    local service=$2
    echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—É $port –¥–ª—è $service..."
    
    # –ß–µ–∫–∞—î–º–æ –¥–æ 30 —Å–µ–∫—É–Ω–¥ –ø–æ–∫–∏ –ø–æ—Ä—Ç —Å—Ç–∞–Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π
    for i in {1..30}; do
        if curl -s http://localhost:$port > /dev/null 2>&1; then
            echo "‚úÖ $service –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É $port"
            return 0
        fi
        sleep 1
    done
    echo "‚ö†Ô∏è  $service –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –ø–æ—Ä—Ç—É $port"
    return 1
}

# –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞
echo "üîß –ó–∞–ø—É—Å–∫ Backend API —Å–µ—Ä–≤–µ—Ä–∞..."
cd backend
npm start > ../logs/backend.log 2>&1 &
BACKEND_PID=$!
echo "Backend PID: $BACKEND_PID"
cd ..

# –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
sleep 3

# –ó–∞–ø—É—Å–∫ –≤–µ–± —Å–µ—Ä–≤–µ—Ä–∞  
echo "üåê –ó–∞–ø—É—Å–∫ Web Interface —Å–µ—Ä–≤–µ—Ä–∞..."
cd windows
npm start > ../logs/web.log 2>&1 &
WEB_PID=$!
echo "Web PID: $WEB_PID"
cd ..

# –°–ø—Ä–æ–±–∞ –∑–∞–ø—É—Å–∫—É –∫–ª—ñ—î–Ω—Ç–∞ (–º–æ–∂–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤ Linux)
echo "üìπ –°–ø—Ä–æ–±–∞ –∑–∞–ø—É—Å–∫—É Screen Capture –∫–ª—ñ—î–Ω—Ç–∞..."
cd client
if command -v node-gyp &> /dev/null; then
    npm start > ../logs/client.log 2>&1 &
    CLIENT_PID=$!
    echo "Client PID: $CLIENT_PID"
else
    echo "‚ö†Ô∏è  Screen Capture –∫–ª—ñ—î–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –≤ Linux Codespace"
    CLIENT_PID=""
fi
cd ..

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥—ñ–≤ —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
mkdir -p logs

# –ß–µ–∫–∞—î–º–æ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo "‚è≥ –ß–µ–∫–∞—î–º–æ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
sleep 5

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ä—Ç–∏
check_port 3000 "Backend API"
check_port 8080 "Web Interface"

# –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–æ—Å—Ç—É–ø
echo ""
echo "‚úÖ Informator —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –≤ GitHub Codespaces!"
echo ""
echo "üåê URLs –¥–ª—è –¥–æ—Å—Ç—É–ø—É:"
echo "   üì± Web Interface: https://$CODESPACE_NAME-8080.preview.app.github.dev"
echo "   üîß Backend API:   https://$CODESPACE_NAME-3000.preview.app.github.dev"
echo ""
echo "üìä –ü—Ä–æ—Ü–µ—Å–∏:"
echo "   Backend PID: $BACKEND_PID"
echo "   Web PID: $WEB_PID"
if [ ! -z "$CLIENT_PID" ]; then
    echo "   Client PID: $CLIENT_PID"
fi
echo ""
echo "üìã –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è:"
echo "   üìÑ –õ–æ–≥–∏: tail -f logs/*.log"
echo "   üõë –ó—É–ø–∏–Ω–∫–∞: pkill -f 'node.*server'"
echo "   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ./start-codespaces.sh"
echo ""
echo "üéØ –ì–æ—Ç–æ–≤–æ! –í—ñ–¥–∫—Ä–∏–π—Ç–µ Web Interface URL —É –Ω–æ–≤—ñ–π –≤–∫–ª–∞–¥—Ü—ñ"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è graceful shutdown
cleanup() {
    echo "üõë –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
    [ ! -z "$BACKEND_PID" ] && kill $BACKEND_PID 2>/dev/null
    [ ! -z "$WEB_PID" ] && kill $WEB_PID 2>/dev/null  
    [ ! -z "$CLIENT_PID" ] && kill $CLIENT_PID 2>/dev/null
    echo "‚úÖ –°–µ—Ä–≤—ñ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω–æ"
    exit 0
}

# –û–±—Ä–æ–±–∫–∞ —Å–∏–≥–Ω–∞–ª—ñ–≤
trap cleanup SIGINT SIGTERM

# –¢—Ä–∏–º–∞—î–º–æ —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–Ω–∏–º
echo "üí° –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤"
wait